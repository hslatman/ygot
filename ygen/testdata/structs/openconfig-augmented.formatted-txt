/*
Package ocstructs is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

This package was generated by codegen-tests
using the following YANG input files:
	- ../testdata/modules/openconfig-simple-target.yang
	- ../testdata/modules/openconfig-simple-augment.yang
Imported modules were sourced from:
*/
package ocstructs

import (
	"encoding/json"
	"fmt"
	"reflect"

	"github.com/openconfig/ygot/ygot"
)

// Binary is a type that is used for fields that have a YANG type of
// binary. It is used such that binary fields can be distinguished from
// leaf-lists of uint8s (which are mapped to []uint8, equivalent to
// []byte in reflection).
type Binary []byte

// YANGEmpty is a type that is used for fields that have a YANG type of
// empty. It is used such that empty fields can be distinguished from boolean fields
// in the generated code.
type YANGEmpty bool

// Int8 is an int8 type assignable to unions of which it is a subtype.
type Int8 int8

// Int16 is an int16 type assignable to unions of which it is a subtype.
type Int16 int16

// Int32 is an int32 type assignable to unions of which it is a subtype.
type Int32 int32

// Int64 is an int64 type assignable to unions of which it is a subtype.
type Int64 int64

// Uint8 is a uint8 type assignable to unions of which it is a subtype.
type Uint8 uint8

// Uint16 is a uint16 type assignable to unions of which it is a subtype.
type Uint16 uint16

// Uint32 is a uint32 type assignable to unions of which it is a subtype.
type Uint32 uint32

// Uint64 is a uint64 type assignable to unions of which it is a subtype.
type Uint64 uint64

// Float64 is a float64 type assignable to unions of which it is a subtype.
type Float64 float64

// String is a string type assignable to unions of which it is a subtype.
type String string

// Bool is a bool type assignable to unions of which it is a subtype.
type Bool bool

// Unsupported is an interface{} wrapper type for unsupported types. It is
// assignable to unions of which it is a subtype.
type Unsupported struct {
	Value interface{}
}

// Device represents the /device YANG schema element.
type Device struct {
	Native	*Native	`path:"native" module:"openconfig-simple-target"`
	Target	*Target	`path:"target" module:"openconfig-simple-target"`
}

// IsYANGGoStruct ensures that Device implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Device) IsYANGGoStruct() {}

// Native represents the /openconfig-simple-target/native YANG schema element.
type Native struct {
	A	*string	`path:"config/a" module:"openconfig-simple-target"`
}

// IsYANGGoStruct ensures that Native implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Native) IsYANGGoStruct() {}

// Target represents the /openconfig-simple-target/target YANG schema element.
type Target struct {
	Foo	*Target_Foo	`path:"foo" module:"openconfig-simple-augment"`
}

// IsYANGGoStruct ensures that Target implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Target) IsYANGGoStruct() {}

// Target_Foo represents the /openconfig-simple-target/target/foo YANG schema element.
type Target_Foo struct {
	A	*string	`path:"config/a" module:"openconfig-simple-augment"`
}

// IsYANGGoStruct ensures that Target_Foo implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Target_Foo) IsYANGGoStruct() {}
